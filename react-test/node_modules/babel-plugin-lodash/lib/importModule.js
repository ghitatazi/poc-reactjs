'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _mapping = require('./mapping');

var _mapping2 = _interopRequireDefault(_mapping);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*----------------------------------------------------------------------------*/

function resolvePath(name) {
  var base = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];

  if (!_mapping2.default.module.get(base).has(name)) {
    base = base || _mapping2.default.module.has('fp') ? '' : _mapping2.default.module.findKey(function (set) {
      return set.has(name);
    });

    if (!base) {
      throw new Error(['Lodash method ' + name + ' is not a known module.', 'Please report bugs to https://github.com/lodash/babel-plugin-lodash/issues.'].join('\n'));
    }
  }
  return _mapping2.default.id + (base ? '/' + base : '') + '/' + name;
}

function importModule(name, file) {
  var base = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];
  var importName = arguments.length <= 3 || arguments[3] === undefined ? name : arguments[3];

  return file.addImport(resolvePath(name, base), 'default', importName);
}

exports.default = _lodash2.default.memoize(importModule, function (name, file, base) {
  return (base ? base + '/' : '') + name;
});
module.exports = exports['default'];