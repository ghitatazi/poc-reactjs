{
  "name": "babel-plugin-lodash",
  "version": "3.1.4",
  "description": "Modular Lodash builds without the hassle.",
  "keywords": [
    "babel-plugin",
    "cherry-pick",
    "lodash",
    "modules"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/lodash/babel-plugin-lodash"
  },
  "license": "MIT",
  "main": "lib/index.js",
  "author": {
    "name": "Graeme Yeates",
    "email": "megawac@gmail.com",
    "url": "https://github.com/megawac"
  },
  "contributors": [
    {
      "name": "Graeme Yeates",
      "email": "megawac@gmail.com",
      "url": "https://github.com/megawac"
    },
    {
      "name": "John-David Dalton",
      "email": "john.david.dalton@gmail.com",
      "url": "http://allyoucanleet.com/"
    }
  ],
  "scripts": {
    "build": "babel src --out-dir lib",
    "prepublish": "npm run build",
    "test": "mocha --check-leaks --compilers js:babel-core/register"
  },
  "devDependencies": {
    "babel-cli": "^6.8.0",
    "babel-core": "^6.7.7",
    "babel-plugin-add-module-exports": "~0.2.1",
    "babel-plugin-transform-object-rest-spread": "^6.8.0",
    "babel-preset-es2015": "^6.6.0",
    "lodash-compat": "^3.10.2",
    "lodash-es": "^4.12.0",
    "mocha": "^2.4.5"
  },
  "dependencies": {
    "glob": "^7.0.3",
    "lodash": "^4.12.0"
  },
  "babel": {
    "plugins": [
      "babel-plugin-add-module-exports",
      "babel-plugin-transform-object-rest-spread"
    ],
    "presets": [
      "es2015"
    ]
  },
  "files": [
    "lib/config.js",
    "lib/importModule.js",
    "lib/index.js",
    "lib/MapCache.js",
    "lib/mapping.js",
    "lib/PackageStore.js",
    "lib/Store.js"
  ],
  "readme": "# babel-plugin-lodash v3.1.4\n\nA simple transform to cherry-pick Lodash modules so you don’t have to.\n\nCombine with [lodash-webpack-plugin](https://www.npmjs.com/package/lodash-webpack-plugin)\nfor even smaller cherry-picked builds!\n\n## Install\n\n```bash\n$ npm i --save lodash\n$ npm i --save-dev babel-plugin-lodash babel-cli babel-preset-es2015\n```\n\n## Example\n\nTransforms\n```js\nimport _ from 'lodash';\nimport { add } from 'lodash/fp';\n\nconst addOne = add(1);\n_.map([1, 2, 3], addOne);\n```\n\nroughly to\n```js\nimport _add from 'lodash/fp/add';\nimport _map from 'lodash/map';\n\nconst addOne = _add(1);\n_map([1, 2, 3], addOne);\n```\n\n## Usage\n\n###### .babelrc\n```json\n{\n  \"plugins\": [\"lodash\"],\n  \"presets\": [\"es2015\"]\n}\n```\n\nSet plugin options using an array of `[pluginName, optionsObject]`.\n```json\n{\n  \"plugins\": [[\"lodash\", { \"id\": \"lodash-compat\", \"cwd\": \"some/path\" }]],\n  \"presets\": [\"es2015\"]\n}\n```\n\n###### Babel CLI\n```sh\n$ babel --plugins lodash --presets es2015 script.js\n```\n\n###### Babel API\n```js\nrequire('babel-core').transform('code', {\n  'plugins': ['lodash'],\n  'presets': ['es2015']\n});\n```\n\n###### webpack.config.js\n```js\n'module': {\n  'loaders': [{\n    'loader': 'babel-loader',\n    'test': /\\.js$/,\n    'exclude': /node_modules/,\n    'query': {\n      'plugins': ['lodash'],\n      'presets': ['es2015']\n    }\n  }]\n}\n```\n\n## FAQ\n\n> Do import specifiers, e.g. `import { x } from 'lodash'`, work?\n\nYou know it!\n\n> What about `lodash/fp`?\n\nYep, we’ve got you covered!\n\n> Can this plugin produce ES2015 imports rather than CommonJS imports?\n\nThis plugin produces ES2015 imports by default. The\n[transform-es2015-modules-commonjs](https://www.npmjs.com/package/babel-plugin-transform-es2015-modules-commonjs)\nplugin, which is included in the Babel [es2015](http://babeljs.io/docs/plugins/preset-es2015/)\npreset, transforms ES2015 `import` statements to CommonJS. Omit it from your\npreset to preserve ES2015 style imports.\n\n## Limitations\n\n* You must use ES2015 imports to load Lodash\n* Babel < 6 & Node.js < 0.12 aren’t supported\n* Chain sequences aren’t supported. See [this blog post](https://medium.com/making-internets/why-using-chain-is-a-mistake-9bc1f80d51ba) for alternatives.\n* Modularized [method packages](https://www.npmjs.com/browse/keyword/lodash-modularized) aren’t supported\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lodash/babel-plugin-lodash/issues"
  },
  "_id": "babel-plugin-lodash@3.1.4",
  "dist": {
    "shasum": "0e5920ab77676ae89190d355c5d766d3495bb521"
  },
  "_from": "babel-plugin-lodash@",
  "_resolved": "https://registry.npmjs.org/babel-plugin-lodash/-/babel-plugin-lodash-3.1.4.tgz"
}
